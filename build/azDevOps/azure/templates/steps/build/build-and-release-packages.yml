parameters:
  pool:
    vmImage: "ubuntu-latest"
  root_src_dir: ""
  repo_name: stacks-dotnet-cqrs
  dotnet_core_version: "3.1.x"
  package_version: ""

steps:

  - task: UseDotNet@2
    displayName: 'Use .NET Core SDK ${{ parameters.dotnet_core_version }}'
    inputs:
      packageType: sdk
      version: ${{ parameters.dotnet_core_version }}
      installationPath: $(Agent.ToolsDirectory)/dotnet

  # Build Nuget packages for templates
  - task: Bash@3
    displayName: Create Packages
    inputs:
      targetType: "inline"
      workingDirectory: ${{ parameters.root_src_dir }}
      script: |
        cp $REPO_NAME/template.csproj .
        mkdir ./templates
        pushd templates
        cp -r ${ROOT_SRC_DIR}/$REPO_NAME .
        cp -r ${ROOT_SRC_DIR}/$REPO_NAME/src/api .
        popd

        # Perform the packing of the templates
        dotnet pack -p:PackageVersion=${VERSION} -o output/packages
    env:
      ROOT_SRC_DIR: $(Agent.BuildDirectory)/s
      REPO_NAME: ${{ parameters.repo_name }}
      VERSION: ${{ parameters.package_version }}

  # Upload the packages as artifacts
  - task: PublishPipelineArtifact@1
    displayName: "Publish: NuGet Packages"
    inputs:
      path: ${{ parameters.root_src_dir }}/output/packages
      artifact: packages
